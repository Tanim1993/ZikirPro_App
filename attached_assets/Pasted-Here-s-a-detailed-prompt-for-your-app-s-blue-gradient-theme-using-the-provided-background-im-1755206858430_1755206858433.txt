Here’s a **detailed prompt** for your app’s **blue gradient theme** using the provided background image with a **linear gradient**.

---

### **Feature: Blue Gradient Background Theme Integration**

**Goal:**
Implement a beautiful, **blue gradient background** across the app, creating a seamless and modern user interface with an attractive blend of blue shades. The gradient will be used across the **header**, **background**, **buttons**, and **cards** to make the app visually appealing.

---

### **1. Color Scheme and Gradient**

#### **Primary Colors**

* **Linear Gradient**:
  `background-image: linear-gradient( 105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );`

  * The gradient starts with a **blue** at `rgba(0,122,184,1)` (light blue) and transitions into a **darker blue/purple** at `rgba(46,0,184,0.88)`.

#### **Gradient Effect:**

* The gradient effect will provide a **modern, visually dynamic feel**.
* This background will be used for **page backgrounds**, **buttons**, and **highlighted sections** to ensure consistency.

#### **Font Colors:**

* **Primary Text**: White (`#FFFFFF`) or Light Blue (`#E0F4FF`) for contrast against the darker gradient.
* **Secondary Text**: Darker shades of blue for subtle text or details (`#A3B9D4`).

#### **Action Items (Buttons & Icons)**:

* Buttons: Use **white text** on **blue gradient** buttons with hover effects (slight darkening on hover).
* Icons: **White** icons for contrast against the gradient.

---

### **2. UI/UX Design Implementation**

#### **Header Bar:**

* **Background**: Apply the **linear gradient** to the header bar. The header will have **white text** (e.g., title of the app) for clear visibility.

  ```css
  header {
    background-image: linear-gradient( 105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    color: white;
    padding: 1rem;
  }
  ```
* **Navigation Bar**: White background for navigation with **blue gradient highlights** for active links or buttons.

#### **Background:**

* Use the gradient as a **background for main pages** (e.g., Home, Profile, Room).

  ```css
  .app-background {
    background-image: linear-gradient( 105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    height: 100%;
    min-height: 100vh;
  }
  ```

#### **Buttons & Action Elements**:

* **Primary Button**: A gradient button with **white text**.

  ```css
  .primary-btn {
    background-image: linear-gradient( 105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    color: white;
    padding: 12px 24px;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
  }

  .primary-btn:hover {
    background-image: linear-gradient(105.9deg, rgba(0,122,184,1) 20%, rgba(46,0,184,0.88) 85%);
  }
  ```

* **Secondary Button**: Light background with blue border and text, keeping the **blue theme** consistent.

  ```css
  .secondary-btn {
    background-color: white;
    color: rgba(0,122,184,1);
    padding: 10px 20px;
    border-radius: 8px;
    border: 2px solid rgba(0,122,184,1);
    cursor: pointer;
    transition: background 0.3s ease-in-out;
  }

  .secondary-btn:hover {
    background-color: rgba(0,122,184,1);
    color: white;
  }
  ```

#### **Cards and Containers**:

* **Content Sections**: Use the gradient in card backgrounds or as a border to highlight key areas. Make sure the **text** remains **readable** by using dark blue or white text.

  ```css
  .content-card {
    background: white;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    padding: 16px;
    border-radius: 10px;
    margin-bottom: 20px;
  }

  .highlighted-card {
    border: 2px solid rgba(0,122,184,1);
    padding: 16px;
    background-image: linear-gradient( 105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    color: white;
  }
  ```

#### **Progress Bars & Timers**:

* Use a **gradient fill** to show **progress** for tasks like competitions or Quran recitations.

  ```css
  .progress-bar {
    background-image: linear-gradient(105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    height: 20px;
    border-radius: 10px;
    width: 0%; /* Dynamic width */
  }
  ```

#### **User Profile Section**:

* **Avatar & User Info**: Use a clean, **white card** with **blue gradient accents** to display profile details.

  ```css
  .profile-header {
    background-image: linear-gradient(105.9deg, rgba(0,122,184,1) 24.4%, rgba(46,0,184,0.88) 80.5% );
    padding: 20px;
    color: white;
    border-radius: 10px;
  }
  ```

---

### **3. Responsive Design**

* Ensure the blue gradient and white text work well across all screen sizes.
* Use **media queries** to ensure the theme adapts well on smaller devices:

  ```css
  @media (max-width: 768px) {
    header {
      font-size: 1rem;
    }

    .primary-btn {
      padding: 10px 20px;
    }
  }
  ```

---

### **4. Final Implementation Steps**

1. **Add gradient as a default background for the app**, ensuring consistency.
2. **Ensure buttons** (primary/secondary) and **card elements** have hover/focus effects that make the interface feel interactive and dynamic.
3. **Set up theme customization**: Allow users to toggle between **gradient theme** and **light theme** (for users who may prefer simpler backgrounds).
4. **Apply a blue gradient to highlight sections** (user’s Quran progress, leaderboard, etc.) while maintaining legibility and clean UI.

---

This **blue & white gradient theme** will provide a **modern, calming experience** for your users while ensuring your app stands out. Once integrated, users will experience a seamless, visually appealing interface across all pages.
